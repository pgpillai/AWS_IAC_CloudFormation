Description: >
    High-Availabile web application -Udacity project /Ponniah Pillai

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    AMItoUse: 
        Description: Image to Use
        Type: String
      

Resources:

  ProfileWithRoles:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - !Ref RoleForS3ReadOnlyEC2Access
  RoleForS3ReadOnlyEC2Access:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
              Action:
                - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
  #arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess

  LBSecGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow http to our load balancer
        VpcId:
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to our hosts 
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
  BastionServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: JumpBox to Allow SSH to our hosts 
      VpcId:
        Fn::ImportValue:
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0

  WebAppLB:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
        SecurityGroups:
        - Ref: LBSecGroup  
  WebAppGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
        VPCZoneIdentifier:
        - Fn::ImportValue: 
            !Sub "${EnvironmentName}-PRI1-SN"
        LaunchConfigurationName:
          Ref: WebAppLaunchConfig
        MinSize: '3'
        MaxSize: '5'
        TargetGroupARNs:
        - Ref: WebAppTargetGroup

  WebAppTargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        HealthCheckIntervalSeconds: 10
        HealthCheckPath: /
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 8
        HealthyThresholdCount: 2
        Port: 80
        Protocol: HTTP
        UnhealthyThresholdCount: 5
        VpcId: 
          Fn::ImportValue:
            Fn::Sub: "${EnvironmentName}-VPCID"

  Listener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
        LoadBalancerArn:
          Ref: WebAppLB
        Port: '80'
        Protocol: HTTP     
  ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1 
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt-get update -y
          sudo apt-get install apache2 -y
          sudo systemctl start apache2.service 
          sudo apt-get install zip unzip 
          sudo apt install awscli -y
          cd /var/www/html
          sudo aws s3 cp s3://udacity-demo-1/udacity.zip .
          sudo unzip -o udacity.zip         
      #ImageId: ami-00ddb0e5626798373
      ImageId: !Sub "${AMItoUse}"
      SecurityGroups:
      - Ref: WebServerSecGroup
      InstanceType: t3.medium
      IamInstanceProfile: !Ref ProfileWithRoles
      BlockDeviceMappings:
      - DeviceName: "/dev/sdk"
        Ebs:
          VolumeSize: '10'

  bastionServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: !Sub "${AMItoUse}"
      NetworkInterfaces:
        - GroupSet: 
            - Ref: 'BastionServerSecGroup'
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !ImportValue 
            'Fn::Sub': '${EnvironmentName}-PUB1-SN'         
Outputs:

  ApplicationURL:
      Description: URL to access the application
      Value: !Join [ "", [ "http://", !GetAtt WebAppLB.DNSName ]]